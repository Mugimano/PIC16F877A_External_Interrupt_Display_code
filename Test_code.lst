

HI-TECH Software PIC LITE Macro Assembler V9.80 build 6738 
                                                                                               Sat Apr 30 15:17:04 2022

HI-TECH Software Omniscient Code Generator (Lite mode) build 6738
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 6738"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           	FNCALL	_main,_lcd_init
    43                           	FNCALL	_lcd_init,_command
    44                           	FNROOT	_main
    45                           	FNCALL	_isr,_lcd_show
    46                           	FNCALL	_isr,i1_command
    47                           	FNCALL	_lcd_show,i1_command
    48                           	FNCALL	_lcd_show,_lcd_send
    49                           	FNCALL	_lcd_send,_lcd_data
    50                           	FNCALL	intlevel1,_isr
    51                           	global	intlevel1
    52                           	FNROOT	intlevel1
    53                           	global	_i
    54                           	global	_num
    55                           	global	_INTCON
    56                           psect	text194,local,class=CODE,delta=2
    57                           global __ptext194
    58  0000                     __ptext194:
    59  000B                     _INTCON	set	11
    60                           	global	_PORTB
    61  0006                     _PORTB	set	6
    62                           	global	_PORTC
    63  0007                     _PORTC	set	7
    64                           	global	_PORTD
    65  0008                     _PORTD	set	8
    66                           	global	_GIE
    67  005F                     _GIE	set	95
    68                           	global	_INTE
    69  005C                     _INTE	set	92
    70                           	global	_INTF
    71  0059                     _INTF	set	89
    72                           	global	_RB1
    73  0031                     _RB1	set	49
    74                           	global	_RB2
    75  0032                     _RB2	set	50
    76                           	global	_TRISB
    77  0086                     _TRISB	set	134
    78                           	global	_TRISC
    79  0087                     _TRISC	set	135
    80                           	global	_TRISD
    81  0088                     _TRISD	set	136
    82                           	global	_INTEDG
    83  040E                     _INTEDG	set	1038
    84                           psect	strings,class=STRING,delta=2
    85                           global __pstrings
    86  0015                     __pstrings:
    87                           ;	global	stringdir,stringtab,__stringbase
    88  0015                     stringtab:
    89                           ;	String table - string pointers are 1 byte each
    90  0015                     stringcode:stringdir:
      + 0015                     stringdir:	
    91  0015  3000               movlw high(stringdir)
    92  0016  008A               movwf pclath
    93  0017  0804               movf fsr,w
    94  0018  0A84               incf fsr
    95  0019  0782               	addwf pc
    96  001A                     __stringbase:
    97  001A  3400               	retlw	0
    98                           psect	strings
    99                           	
   100  001B                     STR_2:	
   101  001B  3449               	retlw	73	;'I'
   102  001C  344E               	retlw	78	;'N'
   103  001D  3454               	retlw	84	;'T'
   104  001E  3445               	retlw	69	;'E'
   105  001F  3452               	retlw	82	;'R'
   106  0020  3452               	retlw	82	;'R'
   107  0021  3455               	retlw	85	;'U'
   108  0022  3450               	retlw	80	;'P'
   109  0023  3454               	retlw	84	;'T'
   110  0024  3420               	retlw	32	;' '
   111  0025  344F               	retlw	79	;'O'
   112  0026  3443               	retlw	67	;'C'
   113  0027  3443               	retlw	67	;'C'
   114  0028  3455               	retlw	85	;'U'
   115  0029  3452               	retlw	82	;'R'
   116  002A  3400               	retlw	0
   117                           psect	strings
   118                           	
   119  002B                     STR_1:	
   120  002B  3457               	retlw	87	;'W'
   121  002C  3441               	retlw	65	;'A'
   122  002D  3452               	retlw	82	;'R'
   123  002E  344E               	retlw	78	;'N'
   124  002F  3449               	retlw	73	;'I'
   125  0030  344E               	retlw	78	;'N'
   126  0031  3447               	retlw	71	;'G'
   127  0032  3400               	retlw	0
   128                           psect	strings
   129                           	file	"Test_code.as"
   130                           	line	#
   131                           psect cinit,class=CODE,delta=2
   132                           global start_initialization
   133  0157                     start_initialization:
   134                           
   135                           psect	bssBANK0,class=BANK0,space=1
   136                           global __pbssBANK0
   137  0026                     __pbssBANK0:
   138  0026                     _i:
   139  0026                            ds      2
   140                           
   141  0028                     _num:
   142  0028                            ds      2
   143                           
   144                           ; Clear objects allocated to BANK0
   145                           psect cinit,class=CODE,delta=2
   146  0157  01A6               	clrf	((__pbssBANK0)+0)&07Fh
   147  0158  01A7               	clrf	((__pbssBANK0)+1)&07Fh
   148  0159  01A8               	clrf	((__pbssBANK0)+2)&07Fh
   149  015A  01A9               	clrf	((__pbssBANK0)+3)&07Fh
   150                           psect cinit,class=CODE,delta=2
   151                           global end_of_initialization
   152                           
   153                           ;End of C runtime variable initialization code
   154                           
   155  015B                     end_of_initialization:
   156  015B  0183               clrf status
   157  015C  120A  118A  2887   ljmp _main	;jump to C main() function
   158                           psect	cstackCOMMON,class=COMMON,space=1
   159                           global __pcstackCOMMON
   160  0070                     __pcstackCOMMON:
   161                           	global	?_lcd_show
   162  0070                     ?_lcd_show:	; 0 bytes @ 0x0
   163                           	global	?_command
   164  0070                     ?_command:	; 0 bytes @ 0x0
   165                           	global	?_lcd_init
   166  0070                     ?_lcd_init:	; 0 bytes @ 0x0
   167                           	global	?_isr
   168  0070                     ?_isr:	; 0 bytes @ 0x0
   169                           	global	?_main
   170  0070                     ?_main:	; 0 bytes @ 0x0
   171                           	global	?_lcd_data
   172  0070                     ?_lcd_data:	; 0 bytes @ 0x0
   173                           	global	??_lcd_data
   174  0070                     ??_lcd_data:	; 0 bytes @ 0x0
   175                           	global	?_lcd_send
   176  0070                     ?_lcd_send:	; 0 bytes @ 0x0
   177                           	global	?i1_command
   178  0070                     ?i1_command:	; 0 bytes @ 0x0
   179                           	global	??i1_command
   180  0070                     ??i1_command:	; 0 bytes @ 0x0
   181  0070                     	ds	2
   182                           	global	lcd_data@rec
   183  0072                     lcd_data@rec:	; 1 bytes @ 0x2
   184                           	global	i1command@com
   185  0072                     i1command@com:	; 1 bytes @ 0x2
   186  0072                     	ds	1
   187                           	global	??_lcd_send
   188  0073                     ??_lcd_send:	; 0 bytes @ 0x3
   189  0073                     	ds	2
   190                           	global	lcd_send@word
   191  0075                     lcd_send@word:	; 1 bytes @ 0x5
   192  0075                     	ds	1
   193                           	global	??_lcd_show
   194  0076                     ??_lcd_show:	; 0 bytes @ 0x6
   195                           	global	??_isr
   196  0076                     ??_isr:	; 0 bytes @ 0x6
   197  0076                     	ds	7
   198                           psect	cstackBANK0,class=BANK0,space=1
   199                           global __pcstackBANK0
   200  0020                     __pcstackBANK0:
   201                           	global	??_command
   202  0020                     ??_command:	; 0 bytes @ 0x0
   203  0020                     	ds	2
   204                           	global	command@com
   205  0022                     command@com:	; 1 bytes @ 0x2
   206  0022                     	ds	1
   207                           	global	??_lcd_init
   208  0023                     ??_lcd_init:	; 0 bytes @ 0x3
   209                           	global	??_main
   210  0023                     ??_main:	; 0 bytes @ 0x3
   211  0023                     	ds	3
   212 ;;Data sizes: Strings 24, constant 0, data 0, bss 4, persistent 0 stack 0
   213 ;;Auto spaces:   Size  Autos    Used
   214 ;; COMMON          14     13      13
   215 ;; BANK0           80      6      10
   216 ;; BANK1           80      0       0
   217 ;; BANK3           96      0       0
   218 ;; BANK2           96      0       0
   219                           
   220 ;;
   221 ;; Pointer list with targets:
   222                           
   223 ;; lcd_send@word	PTR const unsigned char  size(1) Largest target is 16
   224 ;;		 -> STR_2(CODE[16]), STR_1(CODE[8]), 
   225 ;;
   226                           
   227                           
   228 ;;
   229 ;; Critical Paths under _main in COMMON
   230 ;;
   231 ;;   None.
   232 ;;
   233 ;; Critical Paths under _isr in COMMON
   234 ;;
   235 ;;   _lcd_show->_lcd_send
   236 ;;   _lcd_send->_lcd_data
   237 ;;
   238 ;; Critical Paths under _main in BANK0
   239 ;;
   240 ;;   _lcd_init->_command
   241 ;;
   242 ;; Critical Paths under _isr in BANK0
   243 ;;
   244 ;;   None.
   245 ;;
   246 ;; Critical Paths under _main in BANK1
   247 ;;
   248 ;;   None.
   249 ;;
   250 ;; Critical Paths under _isr in BANK1
   251 ;;
   252 ;;   None.
   253 ;;
   254 ;; Critical Paths under _main in BANK3
   255 ;;
   256 ;;   None.
   257 ;;
   258 ;; Critical Paths under _isr in BANK3
   259 ;;
   260 ;;   None.
   261 ;;
   262 ;; Critical Paths under _main in BANK2
   263 ;;
   264 ;;   None.
   265 ;;
   266 ;; Critical Paths under _isr in BANK2
   267 ;;
   268 ;;   None.
   269                           
   270 ;;
   271 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   272 ;;
   273                           
   274 ;;
   275 ;;Call Graph Tables:
   276 ;;
   277 ;; ---------------------------------------------------------------------------------
   278 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   279 ;; ---------------------------------------------------------------------------------
   280 ;; (0) _main                                                 5     5      0      22
   281 ;;                                              3 BANK0      3     3      0
   282 ;;                           _lcd_init
   283 ;; ---------------------------------------------------------------------------------
   284 ;; (1) _lcd_init                                             0     0      0      22
   285 ;;                            _command
   286 ;; ---------------------------------------------------------------------------------
   287 ;; (2) _command                                              3     3      0      22
   288 ;;                                              0 BANK0      3     3      0
   289 ;; ---------------------------------------------------------------------------------
   290 ;; Estimated maximum stack depth 2
   291 ;; ---------------------------------------------------------------------------------
   292 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   293 ;; ---------------------------------------------------------------------------------
   294 ;; (3) _isr                                                  7     7      0     213
   295 ;;                                              6 COMMON     7     7      0
   296 ;;                           _lcd_show
   297 ;;                          i1_command
   298 ;; ---------------------------------------------------------------------------------
   299 ;; (4) _lcd_show                                             0     0      0     140
   300 ;;                          i1_command
   301 ;;                           _lcd_send
   302 ;; ---------------------------------------------------------------------------------
   303 ;; (5) _lcd_send                                             3     3      0      67
   304 ;;                                              3 COMMON     3     3      0
   305 ;;                           _lcd_data
   306 ;; ---------------------------------------------------------------------------------
   307 ;; (4) i1_command                                            3     3      0      73
   308 ;;                                              0 COMMON     3     3      0
   309 ;; ---------------------------------------------------------------------------------
   310 ;; (6) _lcd_data                                             3     3      0      22
   311 ;;                                              0 COMMON     3     3      0
   312 ;; ---------------------------------------------------------------------------------
   313 ;; Estimated maximum stack depth 6
   314 ;; ---------------------------------------------------------------------------------
   315                           
   316 ;; Call Graph Graphs:
   317                           
   318 ;; _main (ROOT)
   319 ;;   _lcd_init
   320 ;;     _command
   321 ;;
   322 ;; _isr (ROOT)
   323 ;;   _lcd_show
   324 ;;     i1_command
   325 ;;     _lcd_send
   326 ;;       _lcd_data
   327 ;;   i1_command
   328 ;;
   329                           
   330 ;; Address spaces:
   331                           
   332 ;;Name               Size   Autos  Total    Cost      Usage
   333 ;;BITCOMMON            E      0       0       0        0.0%
   334 ;;EEDATA             100      0       0       0        0.0%
   335 ;;NULL                 0      0       0       0        0.0%
   336 ;;CODE                 0      0       0       0        0.0%
   337 ;;COMMON               E      D       D       1       92.9%
   338 ;;BITSFR0              0      0       0       1        0.0%
   339 ;;SFR0                 0      0       0       1        0.0%
   340 ;;BITSFR1              0      0       0       2        0.0%
   341 ;;SFR1                 0      0       0       2        0.0%
   342 ;;STACK                0      0       A       2        0.0%
   343 ;;ABS                  0      0      17       3        0.0%
   344 ;;BITBANK0            50      0       0       4        0.0%
   345 ;;BITSFR3              0      0       0       4        0.0%
   346 ;;SFR3                 0      0       0       4        0.0%
   347 ;;BANK0               50      6       A       5       12.5%
   348 ;;BITSFR2              0      0       0       5        0.0%
   349 ;;SFR2                 0      0       0       5        0.0%
   350 ;;BITBANK1            50      0       0       6        0.0%
   351 ;;BANK1               50      0       0       7        0.0%
   352 ;;BITBANK3            60      0       0       8        0.0%
   353 ;;BANK3               60      0       0       9        0.0%
   354 ;;BITBANK2            60      0       0      10        0.0%
   355 ;;BANK2               60      0       0      11        0.0%
   356 ;;DATA                 0      0      21      12        0.0%
   357                           
   358                           	global	_main
   359                           psect	maintext,global,class=CODE,delta=2
   360                           global __pmaintext
   361  0087                     __pmaintext:
   362                           
   363 ;; *************** function _main *****************
   364 ;; Defined at:
   365 ;;		line 29 in file "C:\Users\Mugi\OneDrive\Desktop\MUGI STORAGE\Program files\Mp Lab Programs\Interrupt_test_code\main.
       c"
   366 ;; Parameters:    Size  Location     Type
   367 ;;		None
   368 ;; Auto vars:     Size  Location     Type
   369 ;;  i               2    0        int 
   370 ;; Return value:  Size  Location     Type
   371 ;;		None               void
   372 ;; Registers used:
   373 ;;		wreg, status,2, status,0, pclath, cstack
   374 ;; Tracked objects:
   375 ;;		On entry : 17F/0
   376 ;;		On exit  : 0/0
   377 ;;		Unchanged: 0/0
   378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   379 ;;      Params:         0       0       0       0       0
   380 ;;      Locals:         0       0       0       0       0
   381 ;;      Temps:          0       3       0       0       0
   382 ;;      Totals:         0       3       0       0       0
   383 ;;Total ram usage:        3 bytes
   384 ;; Hardware stack levels required when called:    6
   385 ;; This function calls:
   386 ;;		_lcd_init
   387 ;; This function is called by:
   388 ;;		Startup code after reset
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           psect	maintext
   392                           	file	"C:\Users\Mugi\OneDrive\Desktop\MUGI STORAGE\Program files\Mp Lab Programs\Interru
                                 pt_test_code\main.c"
   393                           	line	29
   394                           	global	__size_of_main
   395  0037                     	__size_of_main	equ	__end_of_main-_main
   396                           	
   397  0087                     _main:	
   398                           	opt	stack 2
   399                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   400                           	line	31
   401                           	
   402  0087                     l1915:	
   403                           ;main.c: 30: int i;
   404                           ;main.c: 31: TRISB = 0xF9;
   405  0087  30F9               	movlw	(0F9h)
   406  0088  1683               	bsf	status, 5	;RP0=1, select bank1
   407  0089  1303               	bcf	status, 6	;RP1=0, select bank1
   408  008A  0086               	movwf	(134)^080h	;volatile
   409                           	line	32
   410                           	
   411  008B                     l1917:	
   412                           ;main.c: 32: PORTB = 0x00;
   413  008B  1283               	bcf	status, 5	;RP0=0, select bank0
   414  008C  1303               	bcf	status, 6	;RP1=0, select bank0
   415  008D  0186               	clrf	(6)	;volatile
   416                           	line	33
   417                           	
   418  008E                     l1919:	
   419                           ;main.c: 33: TRISC = 0xC0;
   420  008E  30C0               	movlw	(0C0h)
   421  008F  1683               	bsf	status, 5	;RP0=1, select bank1
   422  0090  1303               	bcf	status, 6	;RP1=0, select bank1
   423  0091  0087               	movwf	(135)^080h	;volatile
   424                           	line	34
   425                           ;main.c: 34: PORTC = 0x00;
   426  0092  1283               	bcf	status, 5	;RP0=0, select bank0
   427  0093  1303               	bcf	status, 6	;RP1=0, select bank0
   428  0094  0187               	clrf	(7)	;volatile
   429                           	line	35
   430                           ;main.c: 35: TRISD = 0x00;
   431  0095  1683               	bsf	status, 5	;RP0=1, select bank1
   432  0096  1303               	bcf	status, 6	;RP1=0, select bank1
   433  0097  0188               	clrf	(136)^080h	;volatile
   434                           	line	36
   435                           ;main.c: 36: PORTD = 0x00;
   436  0098  1283               	bcf	status, 5	;RP0=0, select bank0
   437  0099  1303               	bcf	status, 6	;RP1=0, select bank0
   438  009A  0188               	clrf	(8)	;volatile
   439                           	line	37
   440                           	
   441  009B                     l1921:	
   442                           ;main.c: 37: INTCON = 0b11010000;
   443  009B  30D0               	movlw	(0D0h)
   444  009C  008B               	movwf	(11)	;volatile
   445                           	line	39
   446                           	
   447  009D                     l1923:	
   448                           ;main.c: 39: INTF = 0;
   449  009D  108B               	bcf	(89/8),(89)&7
   450                           	line	40
   451                           	
   452  009E                     l1925:	
   453                           ;main.c: 40: INTEDG = 1;
   454  009E  1683               	bsf	status, 5	;RP0=1, select bank1
   455  009F  1303               	bcf	status, 6	;RP1=0, select bank1
   456  00A0  1701               	bsf	(1038/8)^080h,(1038)&7
   457                           	line	41
   458                           	
   459  00A1                     l1927:	
   460                           ;main.c: 41: INTE = 1;
   461  00A1  160B               	bsf	(92/8),(92)&7
   462                           	line	42
   463                           	
   464  00A2                     l1929:	
   465                           ;main.c: 42: GIE = 1;
   466  00A2  178B               	bsf	(95/8),(95)&7
   467                           	line	43
   468                           	
   469  00A3                     l1931:	
   470                           ;main.c: 43: lcd_init();
   471  00A3  120A  118A  2105   	fcall	_lcd_init
              120A  118A         
   472                           	line	45
   473                           ;main.c: 45: while(2)
   474  00A8  28A9               	goto	l1933
   475                           	
   476  00A9                     l577:	
   477                           	line	48
   478                           	
   479  00A9                     l1933:	
   480                           ;main.c: 46: {
   481                           ;main.c: 47: interrupt _isr();
   482                           ;main.c: 48: PORTC = 0x01;
   483  00A9  3001               	movlw	(01h)
   484  00AA  1283               	bcf	status, 5	;RP0=0, select bank0
   485  00AB  1303               	bcf	status, 6	;RP1=0, select bank0
   486  00AC  0087               	movwf	(7)	;volatile
   487                           	line	49
   488                           ;main.c: 49: _delay((unsigned long)((1000)*(2000000/4000.0)));
   489                           	opt asmopt_off
   490  00AD  3003               movlw  3
   491  00AE  00A5               movwf	((??_main+0)+0+2),f
   492  00AF  3088               movlw	136
   493  00B0  00A4               movwf	((??_main+0)+0+1),f
   494  00B1  3056               	movlw	86
   495  00B2  00A3               movwf	((??_main+0)+0),f
   496  00B3                     u2227:
   497  00B3  0BA3               	decfsz	((??_main+0)+0),f
   498  00B4  28B3               	goto	u2227
   499  00B5  0BA4               	decfsz	((??_main+0)+0+1),f
   500  00B6  28B3               	goto	u2227
   501  00B7  0BA5               	decfsz	((??_main+0)+0+2),f
   502  00B8  28B3               	goto	u2227
   503                           opt asmopt_on
   504                           
   505  00B9  28A9               	goto	l1933
   506                           	line	50
   507                           	
   508  00BA                     l576:	
   509                           	line	45
   510  00BA  28A9               	goto	l1933
   511                           	
   512  00BB                     l580:	
   513                           	line	51
   514                           	
   515  00BB                     l581:	
   516                           	global	start
   517  00BB  120A  118A  2812   	ljmp	start
   518                           	opt stack 0
   519                           GLOBAL	__end_of_main
   520  00BE                     	__end_of_main:
   521 ;; =============== function _main ends ============
   522                           
   523                           	signat	_main,88
   524                           	global	_lcd_init
   525                           psect	text195,local,class=CODE,delta=2
   526                           global __ptext195
   527  0105                     __ptext195:
   528                           
   529 ;; *************** function _lcd_init *****************
   530 ;; Defined at:
   531 ;;		line 55 in file "C:\Users\Mugi\OneDrive\Desktop\MUGI STORAGE\Program files\Mp Lab Programs\Interrupt_test_code\main.
       c"
   532 ;; Parameters:    Size  Location     Type
   533 ;;		None
   534 ;; Auto vars:     Size  Location     Type
   535 ;;		None
   536 ;; Return value:  Size  Location     Type
   537 ;;		None               void
   538 ;; Registers used:
   539 ;;		wreg, status,2, status,0, pclath, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   545 ;;      Params:         0       0       0       0       0
   546 ;;      Locals:         0       0       0       0       0
   547 ;;      Temps:          0       0       0       0       0
   548 ;;      Totals:         0       0       0       0       0
   549 ;;Total ram usage:        0 bytes
   550 ;; Hardware stack levels used:    1
   551 ;; Hardware stack levels required when called:    5
   552 ;; This function calls:
   553 ;;		_command
   554 ;; This function is called by:
   555 ;;		_main
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           psect	text195
   559                           	file	"C:\Users\Mugi\OneDrive\Desktop\MUGI STORAGE\Program files\Mp Lab Programs\Interru
                                 pt_test_code\main.c"
   560                           	line	55
   561                           	global	__size_of_lcd_init
   562  0019                     	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
   563                           	
   564  0105                     _lcd_init:	
   565                           	opt	stack 2
   566                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   567                           	line	56
   568                           	
   569  0105                     l1913:	
   570                           ;main.c: 56: command(0x01);
   571  0105  3001               	movlw	(01h)
   572  0106  120A  118A  211E   	fcall	_command
              120A  118A         
   573                           	line	57
   574                           ;main.c: 57: command(0x06);
   575  010B  3006               	movlw	(06h)
   576  010C  120A  118A  211E   	fcall	_command
              120A  118A         
   577                           	line	58
   578                           ;main.c: 58: command(0x0C);
   579  0111  300C               	movlw	(0Ch)
   580  0112  120A  118A  211E   	fcall	_command
              120A  118A         
   581                           	line	59
   582                           ;main.c: 59: command(0x38);
   583  0117  3038               	movlw	(038h)
   584  0118  120A  118A  211E   	fcall	_command
              120A  118A         
   585                           	line	60
   586                           	
   587  011D                     l584:	
   588  011D  0008               	return
   589                           	opt stack 0
   590                           GLOBAL	__end_of_lcd_init
   591  011E                     	__end_of_lcd_init:
   592 ;; =============== function _lcd_init ends ============
   593                           
   594                           	signat	_lcd_init,88
   595                           	global	_command
   596                           psect	text196,local,class=CODE,delta=2
   597                           global __ptext196
   598  011E                     __ptext196:
   599                           
   600 ;; *************** function _command *****************
   601 ;; Defined at:
   602 ;;		line 63 in file "C:\Users\Mugi\OneDrive\Desktop\MUGI STORAGE\Program files\Mp Lab Programs\Interrupt_test_code\main.
       c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;  com             1    wreg     unsigned char 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  com             1    2[BANK0 ] unsigned char 
   607 ;; Return value:  Size  Location     Type
   608 ;;		None               void
   609 ;; Registers used:
   610 ;;		wreg
   611 ;; Tracked objects:
   612 ;;		On entry : 0/0
   613 ;;		On exit  : 0/0
   614 ;;		Unchanged: 0/0
   615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   616 ;;      Params:         0       0       0       0       0
   617 ;;      Locals:         0       1       0       0       0
   618 ;;      Temps:          0       2       0       0       0
   619 ;;      Totals:         0       3       0       0       0
   620 ;;Total ram usage:        3 bytes
   621 ;; Hardware stack levels used:    1
   622 ;; Hardware stack levels required when called:    4
   623 ;; This function calls:
   624 ;;		Nothing
   625 ;; This function is called by:
   626 ;;		_lcd_init
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           psect	text196
   630                           	file	"C:\Users\Mugi\OneDrive\Desktop\MUGI STORAGE\Program files\Mp Lab Programs\Interru
                                 pt_test_code\main.c"
   631                           	line	63
   632                           	global	__size_of_command
   633  0013                     	__size_of_command	equ	__end_of_command-_command
   634                           	
   635  011E                     _command:	
   636                           	opt	stack 2
   637                           ; Regs used in _command: [wreg]
   638                           ;command@com stored from wreg
   639  011E  1283               	bcf	status, 5	;RP0=0, select bank0
   640  011F  1303               	bcf	status, 6	;RP1=0, select bank0
   641  0120  00A2               	movwf	(command@com)
   642                           	line	64
   643                           	
   644  0121                     l1905:	
   645                           ;main.c: 64: PORTD = com;
   646  0121  0822               	movf	(command@com),w
   647  0122  0088               	movwf	(8)	;volatile
   648                           	line	65
   649                           	
   650  0123                     l1907:	
   651                           ;main.c: 65: RB1 = 0;
   652  0123  1086               	bcf	(49/8),(49)&7
   653                           	line	66
   654                           	
   655  0124                     l1909:	
   656                           ;main.c: 66: RB2 = 1;
   657  0124  1506               	bsf	(50/8),(50)&7
   658                           	line	67
   659                           ;main.c: 67: _delay((unsigned long)((10)*(2000000/4000.0)));
   660                           	opt asmopt_off
   661  0125  3007               movlw	7
   662  0126  00A1               movwf	((??_command+0)+0+1),f
   663  0127  307D               	movlw	125
   664  0128  00A0               movwf	((??_command+0)+0),f
   665  0129                     u2237:
   666  0129  0BA0               	decfsz	((??_command+0)+0),f
   667  012A  2929               	goto	u2237
   668  012B  0BA1               	decfsz	((??_command+0)+0+1),f
   669  012C  2929               	goto	u2237
   670                           opt asmopt_on
   671                           
   672                           	line	68
   673                           	
   674  012D                     l1911:	
   675                           ;main.c: 68: RB2 = 0;
   676  012D  1283               	bcf	status, 5	;RP0=0, select bank0
   677  012E  1303               	bcf	status, 6	;RP1=0, select bank0
   678  012F  1106               	bcf	(50/8),(50)&7
   679                           	line	69
   680                           	
   681  0130                     l587:	
   682  0130  0008               	return
   683                           	opt stack 0
   684                           GLOBAL	__end_of_command
   685  0131                     	__end_of_command:
   686 ;; =============== function _command ends ============
   687                           
   688                           	signat	_command,4216
   689                           	global	_isr
   690                           psect	text197,local,class=CODE,delta=2
   691                           global __ptext197
   692  0033                     __ptext197:
   693                           
   694 ;; *************** function _isr *****************
   695 ;; Defined at:
   696 ;;		line 16 in file "C:\Users\Mugi\OneDrive\Desktop\MUGI STORAGE\Program files\Mp Lab Programs\Interrupt_test_code\main.
       c"
   697 ;; Parameters:    Size  Location     Type
   698 ;;		None
   699 ;; Auto vars:     Size  Location     Type
   700 ;;		None
   701 ;; Return value:  Size  Location     Type
   702 ;;		None               void
   703 ;; Registers used:
   704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
   705 ;; Tracked objects:
   706 ;;		On entry : 0/0
   707 ;;		On exit  : 0/0
   708 ;;		Unchanged: 0/0
   709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   710 ;;      Params:         0       0       0       0       0
   711 ;;      Locals:         0       0       0       0       0
   712 ;;      Temps:          7       0       0       0       0
   713 ;;      Totals:         7       0       0       0       0
   714 ;;Total ram usage:        7 bytes
   715 ;; Hardware stack levels used:    1
   716 ;; Hardware stack levels required when called:    3
   717 ;; This function calls:
   718 ;;		_lcd_show
   719 ;;		i1_command
   720 ;; This function is called by:
   721 ;;		Interrupt level 1
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           psect	text197
   725                           	file	"C:\Users\Mugi\OneDrive\Desktop\MUGI STORAGE\Program files\Mp Lab Programs\Interru
                                 pt_test_code\main.c"
   726                           	line	16
   727                           	global	__size_of_isr
   728  0054                     	__size_of_isr	equ	__end_of_isr-_isr
   729                           	
   730  0033                     _isr:	
   731                           	opt	stack 2
   732                           ; Regs used in _isr: [allreg]
   733                           psect	intentry,class=CODE,delta=2
   734                           global __pintentry
   735  0004                     __pintentry:
   736                           global interrupt_function
   737  0004                     interrupt_function:
   738                           	global saved_w
   739  007E                     	saved_w	set	btemp+0
   740  0004  00FE               	movwf	saved_w
   741  0005  0803               	movf	status,w
   742  0006  00F9               	movwf	(??_isr+3)
   743  0007  0804               	movf	fsr0,w
   744  0008  00FA               	movwf	(??_isr+4)
   745  0009  080A               	movf	pclath,w
   746  000A  00FB               	movwf	(??_isr+5)
   747  000B  1283               	bcf	status, 5	;RP0=0, select bank0
   748  000C  1303               	bcf	status, 6	;RP1=0, select bank0
   749  000D  087F               	movf	btemp+1,w
   750  000E  00FC               	movwf	(??_isr+6)
   751  000F  120A  118A  2833   	ljmp	_isr
   752                           psect	text197
   753                           	line	17
   754                           	
   755  0033                     i1l1851:	
   756                           ;main.c: 17: for(i=0; i<7;i++)
   757  0033  3000               	movlw	low(0)
   758  0034  00A6               	movwf	(_i)
   759  0035  3000               	movlw	high(0)
   760  0036  00A7               	movwf	((_i))+1
   761                           	
   762  0037                     i1l1853:	
   763  0037  0827               	movf	(_i+1),w
   764  0038  3A80               	xorlw	80h
   765  0039  00FF               	movwf	btemp+1
   766  003A  3080               	movlw	(high(07h))^80h
   767  003B  027F               	subwf	btemp+1,w
   768  003C  1D03               	skipz
   769  003D  2840               	goto	u218_25
   770  003E  3007               	movlw	low(07h)
   771  003F  0226               	subwf	(_i),w
   772  0040                     u218_25:
   773                           
   774  0040  1C03               	skipc
   775  0041  2843               	goto	u218_21
   776  0042  2844               	goto	u218_20
   777  0043                     u218_21:
   778  0043  2846               	goto	i1l1857
   779  0044                     u218_20:
   780  0044  2874               	goto	i1l1869
   781                           	
   782  0045                     i1l1855:	
   783  0045  2874               	goto	i1l1869
   784                           	line	18
   785                           	
   786  0046                     i1l571:	
   787                           	line	19
   788                           	
   789  0046                     i1l1857:	
   790                           ;main.c: 18: {
   791                           ;main.c: 19: lcd_show();
   792  0046  120A  118A  20E7   	fcall	_lcd_show
              120A  118A         
   793                           	line	20
   794                           	
   795  004B                     i1l1859:	
   796                           ;main.c: 20: PORTC = PORTC << 1;
   797  004B  1283               	bcf	status, 5	;RP0=0, select bank0
   798  004C  1303               	bcf	status, 6	;RP1=0, select bank0
   799  004D  0807               	movf	(7),w	;volatile
   800  004E  00F6               	movwf	(??_isr+0)+0
   801  004F  0776               	addwf	(??_isr+0)+0,w
   802  0050  0087               	movwf	(7)	;volatile
   803                           	line	21
   804                           	
   805  0051                     i1l1861:	
   806                           ;main.c: 21: _delay((unsigned long)((1000)*(2000000/4000.0)));
   807                           	opt asmopt_off
   808  0051  3003               movlw  3
   809  0052  00F8               movwf	((??_isr+0)+0+2),f
   810  0053  3088               movlw	136
   811  0054  00F7               movwf	((??_isr+0)+0+1),f
   812  0055  3056               	movlw	86
   813  0056  00F6               movwf	((??_isr+0)+0),f
   814  0057                     u224_27:
   815  0057  0BF6               	decfsz	((??_isr+0)+0),f
   816  0058  2857               	goto	u224_27
   817  0059  0BF7               	decfsz	((??_isr+0)+0+1),f
   818  005A  2857               	goto	u224_27
   819  005B  0BF8               	decfsz	((??_isr+0)+0+2),f
   820  005C  2857               	goto	u224_27
   821                           opt asmopt_on
   822                           
   823                           	line	22
   824                           	
   825  005D                     i1l1863:	
   826                           ;main.c: 22: INTF = 0;
   827  005D  108B               	bcf	(89/8),(89)&7
   828                           	line	17
   829                           	
   830  005E                     i1l1865:	
   831  005E  3001               	movlw	low(01h)
   832  005F  1283               	bcf	status, 5	;RP0=0, select bank0
   833  0060  1303               	bcf	status, 6	;RP1=0, select bank0
   834  0061  07A6               	addwf	(_i),f
   835  0062  1803               	skipnc
   836  0063  0AA7               	incf	(_i+1),f
   837  0064  3000               	movlw	high(01h)
   838  0065  07A7               	addwf	(_i+1),f
   839                           	
   840  0066                     i1l1867:	
   841  0066  0827               	movf	(_i+1),w
   842  0067  3A80               	xorlw	80h
   843  0068  00FF               	movwf	btemp+1
   844  0069  3080               	movlw	(high(07h))^80h
   845  006A  027F               	subwf	btemp+1,w
   846  006B  1D03               	skipz
   847  006C  286F               	goto	u219_25
   848  006D  3007               	movlw	low(07h)
   849  006E  0226               	subwf	(_i),w
   850  006F                     u219_25:
   851                           
   852  006F  1C03               	skipc
   853  0070  2872               	goto	u219_21
   854  0071  2873               	goto	u219_20
   855  0072                     u219_21:
   856  0072  2846               	goto	i1l1857
   857  0073                     u219_20:
   858  0073  2874               	goto	i1l1869
   859                           	
   860  0074                     i1l572:	
   861                           	line	25
   862                           	
   863  0074                     i1l1869:	
   864                           ;main.c: 23: }
   865                           ;main.c: 25: command(0x01);
   866  0074  3001               	movlw	(01h)
   867  0075  120A  118A  2131   	fcall	i1_command
              120A  118A         
   868                           	line	26
   869                           	
   870  007A                     i1l573:	
   871  007A  087C               	movf	(??_isr+6),w
   872  007B  1283               	bcf	status, 5	;RP0=0, select bank0
   873  007C  1303               	bcf	status, 6	;RP1=0, select bank0
   874  007D  00FF               	movwf	btemp+1
   875  007E  087B               	movf	(??_isr+5),w
   876  007F  008A               	movwf	pclath
   877  0080  087A               	movf	(??_isr+4),w
   878  0081  0084               	movwf	fsr0
   879  0082  0879               	movf	(??_isr+3),w
   880  0083  0083               	movwf	status
   881  0084  0EFE               	swapf	saved_w,f
   882  0085  0E7E               	swapf	saved_w,w
   883  0086  0009               	retfie
   884                           	opt stack 0
   885                           GLOBAL	__end_of_isr
   886  0087                     	__end_of_isr:
   887 ;; =============== function _isr ends ============
   888                           
   889                           	signat	_isr,88
   890                           	global	_lcd_show
   891                           psect	text198,local,class=CODE,delta=2
   892                           global __ptext198
   893  00E7                     __ptext198:
   894                           
   895 ;; *************** function _lcd_show *****************
   896 ;; Defined at:
   897 ;;		line 90 in file "C:\Users\Mugi\OneDrive\Desktop\MUGI STORAGE\Program files\Mp Lab Programs\Interrupt_test_code\main.
       c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;		None
   902 ;; Return value:  Size  Location     Type
   903 ;;		None               void
   904 ;; Registers used:
   905 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   911 ;;      Params:         0       0       0       0       0
   912 ;;      Locals:         0       0       0       0       0
   913 ;;      Temps:          0       0       0       0       0
   914 ;;      Totals:         0       0       0       0       0
   915 ;;Total ram usage:        0 bytes
   916 ;; Hardware stack levels used:    1
   917 ;; Hardware stack levels required when called:    2
   918 ;; This function calls:
   919 ;;		i1_command
   920 ;;		_lcd_send
   921 ;; This function is called by:
   922 ;;		_isr
   923 ;; This function uses a non-reentrant model
   924 ;;
   925                           psect	text198
   926                           	file	"C:\Users\Mugi\OneDrive\Desktop\MUGI STORAGE\Program files\Mp Lab Programs\Interru
                                 pt_test_code\main.c"
   927                           	line	90
   928                           	global	__size_of_lcd_show
   929  001E                     	__size_of_lcd_show	equ	__end_of_lcd_show-_lcd_show
   930                           	
   931  00E7                     _lcd_show:	
   932                           	opt	stack 2
   933                           ; Regs used in _lcd_show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   934                           	line	91
   935                           	
   936  00E7                     i1l1871:	
   937                           ;main.c: 91: if (INTF == 1){
   938  00E7  1C8B               	btfss	(89/8),(89)&7
   939  00E8  28EA               	goto	u220_21
   940  00E9  28EB               	goto	u220_20
   941  00EA                     u220_21:
   942  00EA  2904               	goto	i1l600
   943  00EB                     u220_20:
   944                           	line	93
   945                           	
   946  00EB                     i1l1873:	
   947                           ;main.c: 93: command(0x85);
   948  00EB  3085               	movlw	(085h)
   949  00EC  120A  118A  2131   	fcall	i1_command
              120A  118A         
   950                           	line	94
   951                           	
   952  00F1                     i1l1875:	
   953                           ;main.c: 94: lcd_send("WARNING");
   954  00F1  3011               	movlw	((STR_1-__stringbase))&0ffh
   955  00F2  120A  118A  20BE   	fcall	_lcd_send
              120A  118A         
   956                           	line	96
   957                           	
   958  00F7                     i1l1877:	
   959                           ;main.c: 96: command(0xC1);
   960  00F7  30C1               	movlw	(0C1h)
   961  00F8  120A  118A  2131   	fcall	i1_command
              120A  118A         
   962                           	line	97
   963                           ;main.c: 97: lcd_send("INTERRUPT OCCUR");
   964  00FD  3001               	movlw	((STR_2-__stringbase))&0ffh
   965  00FE  120A  118A  20BE   	fcall	_lcd_send
              120A  118A         
   966  0103  2904               	goto	i1l600
   967                           	line	98
   968                           	
   969  0104                     i1l599:	
   970                           	line	99
   971                           	
   972  0104                     i1l600:	
   973  0104  0008               	return
   974                           	opt stack 0
   975                           GLOBAL	__end_of_lcd_show
   976  0105                     	__end_of_lcd_show:
   977 ;; =============== function _lcd_show ends ============
   978                           
   979                           	signat	_lcd_show,88
   980                           	global	_lcd_send
   981                           psect	text199,local,class=CODE,delta=2
   982                           global __ptext199
   983  00BE                     __ptext199:
   984                           
   985 ;; *************** function _lcd_send *****************
   986 ;; Defined at:
   987 ;;		line 81 in file "C:\Users\Mugi\OneDrive\Desktop\MUGI STORAGE\Program files\Mp Lab Programs\Interrupt_test_code\main.
       c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;  word            1    wreg     PTR const unsigned char 
   990 ;;		 -> STR_2(16), STR_1(8), 
   991 ;; Auto vars:     Size  Location     Type
   992 ;;  word            1    5[COMMON] PTR const unsigned char 
   993 ;;		 -> STR_2(16), STR_1(8), 
   994 ;; Return value:  Size  Location     Type
   995 ;;		None               void
   996 ;; Registers used:
   997 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   998 ;; Tracked objects:
   999 ;;		On entry : 0/0
  1000 ;;		On exit  : 0/0
  1001 ;;		Unchanged: 0/0
  1002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1003 ;;      Params:         0       0       0       0       0
  1004 ;;      Locals:         1       0       0       0       0
  1005 ;;      Temps:          2       0       0       0       0
  1006 ;;      Totals:         3       0       0       0       0
  1007 ;;Total ram usage:        3 bytes
  1008 ;; Hardware stack levels used:    1
  1009 ;; Hardware stack levels required when called:    1
  1010 ;; This function calls:
  1011 ;;		_lcd_data
  1012 ;; This function is called by:
  1013 ;;		_lcd_show
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           psect	text199
  1017                           	file	"C:\Users\Mugi\OneDrive\Desktop\MUGI STORAGE\Program files\Mp Lab Programs\Interru
                                 pt_test_code\main.c"
  1018                           	line	81
  1019                           	global	__size_of_lcd_send
  1020  0029                     	__size_of_lcd_send	equ	__end_of_lcd_send-_lcd_send
  1021                           	
  1022  00BE                     _lcd_send:	
  1023                           	opt	stack 2
  1024                           ; Regs used in _lcd_send: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1025                           ;lcd_send@word stored from wreg
  1026  00BE  00F5               	movwf	(lcd_send@word)
  1027                           	line	82
  1028                           	
  1029  00BF                     i1l1887:	
  1030                           ;main.c: 82: while(*word)
  1031  00BF  28D9               	goto	i1l1895
  1032                           	
  1033  00C0                     i1l594:	
  1034                           	line	84
  1035                           	
  1036  00C0                     i1l1889:	
  1037                           ;main.c: 83: {
  1038                           ;main.c: 84: lcd_data(*word++);
  1039  00C0  0875               	movf	(lcd_send@word),w
  1040  00C1  0084               	movwf	fsr0
  1041  00C2  120A  118A  2015   	fcall	stringdir
              120A  118A         
  1042  00C7  120A  118A  2144   	fcall	_lcd_data
              120A  118A         
  1043                           	
  1044  00CC                     i1l1891:	
  1045  00CC  3001               	movlw	(01h)
  1046  00CD  00F3               	movwf	(??_lcd_send+0)+0
  1047  00CE  0873               	movf	(??_lcd_send+0)+0,w
  1048  00CF  07F5               	addwf	(lcd_send@word),f
  1049                           	line	85
  1050                           	
  1051  00D0                     i1l1893:	
  1052                           ;main.c: 85: _delay((unsigned long)((10)*(2000000/4000.0)));
  1053                           	opt asmopt_off
  1054  00D0  3007               movlw	7
  1055  00D1  00F4               movwf	((??_lcd_send+0)+0+1),f
  1056  00D2  307D               	movlw	125
  1057  00D3  00F3               movwf	((??_lcd_send+0)+0),f
  1058  00D4                     u225_27:
  1059  00D4  0BF3               	decfsz	((??_lcd_send+0)+0),f
  1060  00D5  28D4               	goto	u225_27
  1061  00D6  0BF4               	decfsz	((??_lcd_send+0)+0+1),f
  1062  00D7  28D4               	goto	u225_27
  1063                           opt asmopt_on
  1064                           
  1065  00D8  28D9               	goto	i1l1895
  1066                           	line	86
  1067                           	
  1068  00D9                     i1l593:	
  1069                           	line	82
  1070                           	
  1071  00D9                     i1l1895:	
  1072  00D9  0875               	movf	(lcd_send@word),w
  1073  00DA  0084               	movwf	fsr0
  1074  00DB  120A  118A  2015   	fcall	stringdir
              120A  118A         
  1075  00E0  3800               	iorlw	0
  1076  00E1  1D03               	skipz
  1077  00E2  28E4               	goto	u221_21
  1078  00E3  28E5               	goto	u221_20
  1079  00E4                     u221_21:
  1080  00E4  28C0               	goto	i1l1889
  1081  00E5                     u221_20:
  1082  00E5  28E6               	goto	i1l596
  1083                           	
  1084  00E6                     i1l595:	
  1085                           	line	87
  1086                           	
  1087  00E6                     i1l596:	
  1088  00E6  0008               	return
  1089                           	opt stack 0
  1090                           GLOBAL	__end_of_lcd_send
  1091  00E7                     	__end_of_lcd_send:
  1092 ;; =============== function _lcd_send ends ============
  1093                           
  1094                           	signat	_lcd_send,4216
  1095                           	global	i1_command
  1096                           psect	text200,local,class=CODE,delta=2
  1097                           global __ptext200
  1098  0131                     __ptext200:
  1099                           
  1100 ;; *************** function i1_command *****************
  1101 ;; Defined at:
  1102 ;;		line 63 in file "C:\Users\Mugi\OneDrive\Desktop\MUGI STORAGE\Program files\Mp Lab Programs\Interrupt_test_code\main.
       c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  command         1    wreg     unsigned char 
  1105 ;; Auto vars:     Size  Location     Type
  1106 ;;  command         1    2[COMMON] unsigned char 
  1107 ;; Return value:  Size  Location     Type
  1108 ;;		None               void
  1109 ;; Registers used:
  1110 ;;		wreg
  1111 ;; Tracked objects:
  1112 ;;		On entry : 0/0
  1113 ;;		On exit  : 0/0
  1114 ;;		Unchanged: 0/0
  1115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1116 ;;      Params:         0       0       0       0       0
  1117 ;;      Locals:         1       0       0       0       0
  1118 ;;      Temps:          2       0       0       0       0
  1119 ;;      Totals:         3       0       0       0       0
  1120 ;;Total ram usage:        3 bytes
  1121 ;; Hardware stack levels used:    1
  1122 ;; This function calls:
  1123 ;;		Nothing
  1124 ;; This function is called by:
  1125 ;;		_isr
  1126 ;;		_lcd_show
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           psect	text200
  1130                           	file	"C:\Users\Mugi\OneDrive\Desktop\MUGI STORAGE\Program files\Mp Lab Programs\Interru
                                 pt_test_code\main.c"
  1131                           	line	63
  1132                           	global	__size_ofi1_command
  1133  0013                     	__size_ofi1_command	equ	__end_ofi1_command-i1_command
  1134                           	
  1135  0131                     i1_command:	
  1136                           	opt	stack 4
  1137                           ; Regs used in i1_command: [wreg]
  1138                           ;i1command@com stored from wreg
  1139  0131  00F2               	movwf	(i1command@com)
  1140                           	line	64
  1141                           	
  1142  0132                     i1l1897:	
  1143                           ;main.c: 64: PORTD = com;
  1144  0132  0872               	movf	(i1command@com),w
  1145  0133  1283               	bcf	status, 5	;RP0=0, select bank0
  1146  0134  1303               	bcf	status, 6	;RP1=0, select bank0
  1147  0135  0088               	movwf	(8)	;volatile
  1148                           	line	65
  1149                           	
  1150  0136                     i1l1899:	
  1151                           ;main.c: 65: RB1 = 0;
  1152  0136  1086               	bcf	(49/8),(49)&7
  1153                           	line	66
  1154                           	
  1155  0137                     i1l1901:	
  1156                           ;main.c: 66: RB2 = 1;
  1157  0137  1506               	bsf	(50/8),(50)&7
  1158                           	line	67
  1159                           ;main.c: 67: _delay((unsigned long)((10)*(2000000/4000.0)));
  1160                           	opt asmopt_off
  1161  0138  3007               movlw	7
  1162  0139  00F1               movwf	((??i1_command+0)+0+1),f
  1163  013A  307D               	movlw	125
  1164  013B  00F0               movwf	((??i1_command+0)+0),f
  1165  013C                     u226_27:
  1166  013C  0BF0               	decfsz	((??i1_command+0)+0),f
  1167  013D  293C               	goto	u226_27
  1168  013E  0BF1               	decfsz	((??i1_command+0)+0+1),f
  1169  013F  293C               	goto	u226_27
  1170                           opt asmopt_on
  1171                           
  1172                           	line	68
  1173                           	
  1174  0140                     i1l1903:	
  1175                           ;main.c: 68: RB2 = 0;
  1176  0140  1283               	bcf	status, 5	;RP0=0, select bank0
  1177  0141  1303               	bcf	status, 6	;RP1=0, select bank0
  1178  0142  1106               	bcf	(50/8),(50)&7
  1179                           	line	69
  1180                           	
  1181  0143                     i1l587:	
  1182  0143  0008               	return
  1183                           	opt stack 0
  1184                           GLOBAL	__end_ofi1_command
  1185  0144                     	__end_ofi1_command:
  1186 ;; =============== function i1_command ends ============
  1187                           
  1188                           	signat	i1_command,88
  1189                           	global	_lcd_data
  1190                           psect	text201,local,class=CODE,delta=2
  1191                           global __ptext201
  1192  0144                     __ptext201:
  1193                           
  1194 ;; *************** function _lcd_data *****************
  1195 ;; Defined at:
  1196 ;;		line 72 in file "C:\Users\Mugi\OneDrive\Desktop\MUGI STORAGE\Program files\Mp Lab Programs\Interrupt_test_code\main.
       c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;  rec             1    wreg     unsigned char 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  rec             1    2[COMMON] unsigned char 
  1201 ;; Return value:  Size  Location     Type
  1202 ;;		None               void
  1203 ;; Registers used:
  1204 ;;		wreg
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1210 ;;      Params:         0       0       0       0       0
  1211 ;;      Locals:         1       0       0       0       0
  1212 ;;      Temps:          2       0       0       0       0
  1213 ;;      Totals:         3       0       0       0       0
  1214 ;;Total ram usage:        3 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		_lcd_send
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           psect	text201
  1223                           	file	"C:\Users\Mugi\OneDrive\Desktop\MUGI STORAGE\Program files\Mp Lab Programs\Interru
                                 pt_test_code\main.c"
  1224                           	line	72
  1225                           	global	__size_of_lcd_data
  1226  0013                     	__size_of_lcd_data	equ	__end_of_lcd_data-_lcd_data
  1227                           	
  1228  0144                     _lcd_data:	
  1229                           	opt	stack 2
  1230                           ; Regs used in _lcd_data: [wreg]
  1231                           ;lcd_data@rec stored from wreg
  1232  0144  00F2               	movwf	(lcd_data@rec)
  1233                           	line	73
  1234                           	
  1235  0145                     i1l1879:	
  1236                           ;main.c: 73: PORTD = rec;
  1237  0145  0872               	movf	(lcd_data@rec),w
  1238  0146  1283               	bcf	status, 5	;RP0=0, select bank0
  1239  0147  1303               	bcf	status, 6	;RP1=0, select bank0
  1240  0148  0088               	movwf	(8)	;volatile
  1241                           	line	74
  1242                           	
  1243  0149                     i1l1881:	
  1244                           ;main.c: 74: RB1 = 1;
  1245  0149  1486               	bsf	(49/8),(49)&7
  1246                           	line	75
  1247                           	
  1248  014A                     i1l1883:	
  1249                           ;main.c: 75: RB2 = 1;
  1250  014A  1506               	bsf	(50/8),(50)&7
  1251                           	line	76
  1252                           ;main.c: 76: _delay((unsigned long)((10)*(2000000/4000.0)));
  1253                           	opt asmopt_off
  1254  014B  3007               movlw	7
  1255  014C  00F1               movwf	((??_lcd_data+0)+0+1),f
  1256  014D  307D               	movlw	125
  1257  014E  00F0               movwf	((??_lcd_data+0)+0),f
  1258  014F                     u227_27:
  1259  014F  0BF0               	decfsz	((??_lcd_data+0)+0),f
  1260  0150  294F               	goto	u227_27
  1261  0151  0BF1               	decfsz	((??_lcd_data+0)+0+1),f
  1262  0152  294F               	goto	u227_27
  1263                           opt asmopt_on
  1264                           
  1265                           	line	77
  1266                           	
  1267  0153                     i1l1885:	
  1268                           ;main.c: 77: RB2 = 0;
  1269  0153  1283               	bcf	status, 5	;RP0=0, select bank0
  1270  0154  1303               	bcf	status, 6	;RP1=0, select bank0
  1271  0155  1106               	bcf	(50/8),(50)&7
  1272                           	line	78
  1273                           	
  1274  0156                     i1l590:	
  1275  0156  0008               	return
  1276                           	opt stack 0
  1277                           GLOBAL	__end_of_lcd_data
  1278  0157                     	__end_of_lcd_data:
  1279 ;; =============== function _lcd_data ends ============
  1280                           
  1281                           	signat	_lcd_data,4216
  1282                           psect	text202,local,class=CODE,delta=2
  1283                           global __ptext202
  1284  0000                     __ptext202:
  1285                           	global	btemp
  1286  007E                     	btemp set 07Eh
  1287                           
  1288                           	DABS	1,126,2	;btemp
  1289                           	global	wtemp0
  1290  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.80 build 6738 
Symbol Table                                                                                   Sat Apr 30 15:17:04 2022

         lcd_data@rec 0072                     _i 0026                     pc 0002                    fsr 0004  
                 l580 00BB                   l581 00BB                   l584 011D                   l576 00BA  
                 l577 00A9                   l587 0130                   _GIE 005F                   _RB1 0031  
                 _RB2 0032                   _isr 0033                   _num 0028                   fsr0 0004  
                l1911 012D                  l1905 0121                  l1913 0105                  l1921 009B  
                l1907 0123                  l1931 00A3                  l1923 009D                  l1915 0087  
                l1909 0124                  l1933 00A9                  l1925 009E                  l1917 008B  
                l1927 00A1                  l1919 008E                  l1929 00A2                  ?_isr 0070  
                STR_1 002B                  STR_2 001B                  u2227 00B3                  u2237 0129  
                _INTE 005C                  _INTF 0059                  _main 0087                  btemp 007E  
                start 0012                 ??_isr 0076          lcd_send@word 0075                 ?_main 0070  
               i1l600 0104                 i1l571 0046                 i1l572 0074                 i1l573 007A  
               i1l590 0156                 i1l593 00D9                 i1l594 00C0                 i1l587 0143  
               i1l595 00E6                 i1l596 00E6                 i1l599 0104                 _PORTB 0006  
               _PORTC 0007                 _PORTD 0008                 _TRISB 0086                 _TRISC 0087  
               _TRISD 0088       __end_of_command 0131                 pclath 000A                 status 0003  
               wtemp0 007E    __size_ofi1_command 0013          __end_of_main 00BE                ??_main 0023  
              i1l1901 0137                i1l1903 0140                i1l1851 0033                i1l1861 0051  
              i1l1853 0037                i1l1871 00E7                i1l1863 005D                i1l1855 0045  
              i1l1881 0149                i1l1873 00EB                i1l1865 005E                i1l1857 0046  
              i1l1883 014A                i1l1891 00CC                i1l1875 00F1                i1l1867 0066  
              i1l1859 004B                i1l1885 0153                i1l1893 00D0                i1l1877 00F7  
              i1l1869 0074                i1l1879 0145                i1l1895 00D9                i1l1887 00BF  
              u220_20 00EB                i1l1897 0132                i1l1889 00C0                u220_21 00EA  
              i1l1899 0136                u221_20 00E5                u221_21 00E4                _INTEDG 040E  
              u224_27 0057                _INTCON 000B                u225_27 00D4                u218_20 0044  
              u218_21 0043                u218_25 0040                u226_27 013C                u219_20 0073  
              u219_21 0072                u219_25 006F                u227_27 014F      __end_of_lcd_data 0157  
    __end_of_lcd_init 011E      __end_of_lcd_send 00E7      __end_of_lcd_show 0105             ??_command 0020  
              saved_w 007E     __end_ofi1_command 0144        __pcstackCOMMON 0070          i1command@com 0072  
          __pbssBANK0 0026            __pmaintext 0087            __pintentry 0004             ?_lcd_data 0070  
           ?_lcd_init 0070             ?_lcd_send 0070             ?_lcd_show 0070               _command 011E  
        __size_of_isr 0054            ??_lcd_data 0070            ??_lcd_init 0023            ??_lcd_send 0073  
          ??_lcd_show 0076  end_of_initialization 015B            command@com 0022             i1_command 0131  
 start_initialization 0157           __end_of_isr 0087            ?i1_command 0070         __pcstackBANK0 0020  
   __size_of_lcd_data 0013     __size_of_lcd_init 0019     __size_of_lcd_send 0029     __size_of_lcd_show 001E  
           __ptext200 0131             __ptext201 0144             __ptext202 0000             __ptext194 0000  
           __ptext195 0105             __ptext196 011E             __ptext197 0033             __ptext198 00E7  
           __ptext199 00BE             __pstrings 0015              ?_command 0070           ??i1_command 0070  
   interrupt_function 0004           __stringbase 001A      __size_of_command 0013              _lcd_data 0144  
            _lcd_init 0105              _lcd_send 00BE              _lcd_show 00E7         __size_of_main 0037  
            intlevel1 0000             stringcode 0015              stringdir 0015              stringtab 0015  
